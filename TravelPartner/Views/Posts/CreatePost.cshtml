@model TravelPartner.Data.Entities.Post

@{
    ViewBag.Title = "Submit Post";
}
<link href="~/Content/bootstrap-datepicker3.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.js"></script>

<form id="postForm">
    <div class="row">
        <div class="col-sm-2"></div>
        <div class="col-sm-8">
            <div class="col-sm-12">
                <div class="form-group">
                    <label for="description">Title:</label>
                    <input type="text" class="form-control" id="title" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-8">
                    <div class="form-group">
                        <label for="fromlocation">From Location:</label>
                        <input type="text" class="form-control" id="fromlocation">
                    </div>

                    <div class="form-group">
                        <label for="tolocation">To Location:</label>
                        <input type="text" class="form-control" id="tolocation">
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="fromDate">From Date:</label>
                        <input type="text" class="form-control" id="fromDate">
                    </div>
                    <div class="form-group">
                        <label for="toDate">To Date:</label>
                        <input type="text" class="form-control" id="toDate">
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="form-group">
                        <label for="description">Description:</label>
                        <textarea rows="5" class="form-control" id="description"></textarea>
                    </div>
                </div>
                @*<span>
                        <input type="file"
                               style="visibility:hidden; width: 1px;"
                               id='${multipartFilePath}' name='${multipartFilePath}'
                               onchange="$(this).parent().find('span').html($(this).val().replace('C:\\fakepath\\', ''))" /> <!-- Chrome security returns 'C:\fakepath\'  -->
                        <input class="btn btn-primary" type="button" value="Upload File.." onclick="$(this).parent().find('input[type=file]').click();" /> <!-- on button click fire the file click event -->
                        &nbsp;
                        <span class="badge badge-important"></span>
                    </span>*@
                <button type="submit" id="submit" class="col-lg-offset-4 btn btn-primary">Submit</button>
            </div>


        </div>
        <div class="col-sm-2"></div>


    </div>
</form>
<script type="text/javascript">
    $(document).ready(function () {
        $('#fromDate').datepicker({
            format: 'dd-mm-yyyy',
            clearBtn: true,
            todayHighlight: true,
            autoclose: true
        });
        $('#toDate').datepicker({
            format: 'dd-mm-yyyy',
            clearBtn: true,
            todayHighlight: true,
            autoclose: true
        });

        $('#submit').click(function () {
            var title = $('#title').val().trim();
            var fromlocation = $('#fromlocation').val().trim();
            var tolocation = $('#tolocation').val().trim();
            var fromDate = $('#fromDate').val().trim();
            var toDate = $('#toDate').val().trim();
            var description = $('#description').val();
            if (fromlocation == '' || fromlocation == null || fromlocation == undefined) {
                alert("from location can't be empty")
                return;
            }
            if (tolocation == '' || tolocation == null || tolocation == undefined) {
                alert("To location can't be empty")
                return;
            }
            if (description == '' || description == null || description == undefined) {
                alert("Description can't be empty")
                return;
            }
            if (title == '' || title == null || title == undefined) {
                alert("Title can't be empty")
                return;
            }
            postVM = JSON.stringify({ Title: title, FromDate: fromDate, FromLocation: fromlocation, ToDate: toDate, ToLocation: tolocation, Body: description });
            $.ajax({
                url: '@Url.Action("CreatePost", "Posts")',
                type: 'POST',
                data: postVM,
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    debugger;
                    if (result)
                        window.location.href = '@Url.Action("Index","Posts")';
                    else
                        alert("Something's not right..!/n Please try later");
                }
            });
        });
    });
</script>